type Article {
	_id: String!
	title: String!
	shortDescription: String
	content: String
	link: String
	imageLink: String
	source: Source
	category: String
	publishedDate: String
	createdDate: String
	modifiedDate: String
	topic: String
}

input ArticleCriteria {
	lastArticleId: String
	lastQueryDate: String
}

type Source {
	name: String
	url: String
	category: String
	link: String
	logoLink: String
}

type TwitterHandle {
	_id: String!
	name: String
	handle: String!
	category: String
	userWeight: String
	categoryWeight: String
}

type Tweet {
	_id: String!
	text: String
	tweetId: String
	handle: String
	twitterHandle: TwitterHandle
	publishedDate: String
	createdAt: String
	name: String
	profileImage: String
	description: String
}

input TweetCriteria {
	lastTweetId: String
	lastQueryDate: String
}

type CoronaStats {
	createdDate: String
	stats: [CoronaMetrics]
	worldSummary: worldSummary
}

type worldSummary {
	totalCases: Int
	newCases: Int
	totalDeaths: Int
	newDeaths: Int
}

type CoronaMetrics {
	country: String
	total_cases: Int
	total_deaths: Int
	new_cases: Int
	new_deaths: Int
}

type DistrictCoronaStats {
	createdDate: String
	timeLine: coronaTimeLine
	districts: [DistrictCoronaMetrics]
}

type coronaTimeLine {
	date: String
	totalCases: Int
	newCases: Int
	totalRecoveries: Int
	newRecoveries: Int
	totalDeaths: Int
	newDeaths: Int
}

type DistrictCoronaMetrics {
	name: String
	nepaliName: String
	totalCases: Int
	activeCases: Int
	recovered: Int
	deaths: Int
}

type TrendingHandle{
	name: String
	handle: String
	searchTerms: [String]
	image: String
}

type TrendingTweetCount{
	createdDate: String
	createdAt: String
	trendings: [TrendingArr]
}

type TrendingArr{
	category: String
	counts: [TrendingMetric]
}

type TrendingMetric {
	name: String
	handle: String
	count: Int
	image: String
}

type WeatherInfo {
	ipAddress: String
	temperature: Float!
	condition: String
	description: String
	place: String
}

type Query {
	getArticles(criteria: ArticleCriteria): [Article]!
	getTweets(criteria: TweetCriteria): [Tweet]!
	getArticle(_id: String!): Article
	getLatestCoronaStats: CoronaStats
	getWeatherInfo: WeatherInfo
	getDistrictCoronaStats: DistrictCoronaStats
	getTrending: TrendingTweetCount
}

type Response {
	success: Boolean
}

input StoreFcmInput {
	nid: String!
	fcmToken: String!
	countryCode: String
	timeZone: String
	createdDate: String
	modifiedDate: String
}

type Mutation {
	storeFcmToken(input: StoreFcmInput): Response
}